clear;
###### INPUT VARIABLES ########
switchtolayout;
# define number of simulations = resolution of final plot
I = 1; # number random stepps 11
setglobalmonitor("frequency points",300); # frequenzy points #200#100
resolution = 2000; # resolution of far field projection #2000
# set the refraction index
Index = 1.5; # close to expoxy index
setnamed("structure group","index_grating",Index); 
# define i periods to use
periods = 0.97*1e-6; #linspace(0.5*1e-6,1.5*1e-6,i);
# define i fill-factors to use
fillfact = 0.55; #linspace(0.1,0.7,i);
# grating heights to be simulated
heights = 1*1e-6; #[1*1e-6, 0.73*1e-6, 0.68*1e-6, 0.49*1e-6]; # 4 heights according to flowers
# Nr of periods in supercell
Nperiods = 1002; #2 will be lost for simulation area setting
setnamed("structure group","n_periods",Nperiods);
# disorder -- loop must be set up in code!
sigmaW = 0.09*1e-6; #width
sigmaX = 0.16*1e-6; #element displacement
sigmaH = 0.20*1e-6; #height
# interval over which factors to scan the disorder
DFact = linspace(0,2,I);
# repitition of each disorder
Rpt = 1;
# seeds for randomisation
seed = [1, 299, 3999, 13, 676, 47, 2345, 564, 2967, 4920, 36, 9959, 486, 1000, 5692];
# matlab filename to save experiment settings
matlabnameSettings = "matfile_Settings_Cluster";


###### INITIALZE ARRAYS ########
# find all frequencies of simulation
fsource = linspace(getglobalmonitor("minimum frequency"),getglobalmonitor("maximum frequency"),getglobalmonitor("frequency points")); # get frequenzy values
# create/get vector as y achsis
lambda = c/fsource; # calculate wavelengths
# reserve a matrix each simulation
Reflection_Intensity = matrix(resolution,length(fsource));

# Use once for each grating
###### SAVE SETTINGS IN MATLAB ########
matlabsave(matlabnameSettings, lambda, fsource, periods, fillfact, heights, Index, Nperiods, I, sigmaW, sigmaX, sigmaH, seed, DFact, Rpt);

###### CHANGE VARIABLES LOOPS ########
 # switch to layout mode so that you can edit the objects
 switchtolayout;
 # set the height of the grating teeth to the desired value
 setnamed("structure group","h_grating",heights);
 # set the period and simulation boundaries to the desired value
 setnamed("structure group","period",periods);
 setnamed("FDTD","x span",periods*(Nperiods-2));
 setnamed("source","x span",periods*(Nperiods+2));
 setnamed("reflection_grating","x span",periods*(Nperiods+2));
 # set the fill-factor of the grating to the desired value
 setnamed("structure group","fill_factor",fillfact);

######################################
###### Disorder LOOPS ########
#Set the seed
for(t=1:Rpt){ switchtolayout; setnamed("structure group","seed",seed(t));
setnamed("structure group","sigma_w",0);
setnamed("structure group","sigma_x",0);
setnamed("structure group","sigma_h",0);
for(o=1:I){ switchtolayout; setnamed("structure group","sigma_w",DFact(o)*sigmaW);
setnamed("structure group","sigma_x",DFact(o)*sigmaX); setnamed("structure group","sigma_h",DFact(o)*sigmaH);
#for(p=1:I){ switchtolayout; 
#for(q=1:I){ switchtolayout;

## RUN the simulation
run;
###### Settings IN RUN MODE ######
# get source power for normalisation
SPower = sourcepower(fsource);


## LOOP FOR FREQUENZY POINS
for(l=1:length(fsource)){

###### GET SIMULATION RESULTS ########
  # get results from monitors and save in variables
  reflection_farfield_E2 = farfield2d("reflection_grating",l,resolution); # project monitor to farfield #16
  # create/get vector as x achsis
  if(l==1){ if(o==1){ ############# <------ CHANGE VARIABLE
  theta = farfieldangle("reflection_grating",l,resolution);
  }}
  # write result into final matrix
  Reflection_Intensity(1:resolution,l) = reflection_farfield_E2;

} # end of the frequenzy loop


###### SAVE IN MATLAB ######## ---v--- CHANGE VARIABLE
matlabname2 = "matfile_all_disorder-run" + num2str(t) + "--" + num2str(o); #+ num2str(heights(k)*1e9) + "nm--" + num2str(n) + "-" + num2str(m);
matlabsave(matlabname2, Reflection_Intensity, theta, SPower);


#} # end of disorder loop
} # end of disorder loop
#} # end of disorder loop
} # end disorder repition loop

